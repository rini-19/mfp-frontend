{"version":3,"sources":["components/Users.component.jsx","components/MessageTable.component.jsx","components/Messages.component.jsx","components/Services.component.jsx","components/Dashboard/InfoModal.jsx","components/Dashboard/dashboard-components/MonthlyRecapChart.jsx","components/Dashboard/dashboard-components/UpperInfoBoxes.jsx","components/Dashboard/dashboard-components/VisitorsReport.jsx","components/Dashboard/dashboard-components/BrowserUsage.jsx","components/Dashboard/dashboard-components/LatestOrders.jsx","components/Dashboard/dashboard.component.jsx","components/Dashboard/Dashboard.Info.js","pages/dashboard.page.jsx","pages/login.page.jsx","App.js","serviceWorker.js","index.js"],"names":["Users","props","loadUser","res","setState","users","console","log","state","id","name","fbid","email","phone","isLN","localStorage","getItem","token","fetch","method","headers","then","response","json","responsiveData","this","title","homeRoute","xs","width","columns","data","concat","render","text","className","options","onClickEvents","onClickEvent","rowIdx","rowData","Component","MessageTable","user_id","client_id","useState","msgs","setMsgs","useEffect","mounted","body","JSON","stringify","Uid","Messages","x","forEach","r","push","browserTitle","undefined","map","index","key","type","collapsable","collapsed","clientID","len","length","Services","loadServices","Type","Text","Res_date","i","is_resolved","resolved_at","details","user","req_date","time_received","status","res_date","services","responsiveColumns","data2","InfoModal","show","onHide","modal","modalSize","defaultProps","salesChartData","labels","datasets","label","backgroundColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","salesChartOptions","showScale","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","lineTension","pointRadius","datasetStroke","datasetStrokeWidth","datasetFill","legend","display","maintainAspectRatio","responsive","MonthlyRecapChart","ref","c","chartRef","height","Data","icon","color","number","UpperInfoBoxes","loadInfoBoxData","usrCnt","unqUsrCnt","usrTodayCnt","msgCnt","sm","md","React","VisitorsReport","closable","noPadding","style","padding","header","chartData","BrowserUsage","browserUsageData","browserUsageOptions","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","cutoutPercentage","animationSteps","animationEasing","animateRotate","animateScale","legendCallback","chart","mapColor","p","uuidv4","tooltips","displayColors","callbacks","tooltipItem","browserUsageFooter","pills","stacked","iconClass","iconLabel","onClick","browserUsageChartLegend","browserUsageChart","chartInstance","generateLegend","footer","footerClass","latestOrdersColumns","href","latestOrdersData","item","popularity","LatestOrders","size","flat","pullLeft","pullRight","Dashboard","showInfoModal","infoModalText","bind","subTitle","percentage","percentageColor","indication","maxValue","currentValue","iconColorOnly","progress","progressText","inBox","labelType","description","Item","Sidebar","Header","UserPanel","Entry","Navbar","DashboardPage","logout","clear","history","replace","client","updateClient","parse","titleShort","theme","homeTo","Core","username","clientData","imageUrl","to","path","withRouter","Login","onNameChange","event","loginName","target","value","onPasswordChange","loginPassword","onSubmitChange","password","loadClient","valid","onChange","placeholder","App","updateIsLoggedIn","setItem","isLoggedIn","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.03827312.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Content, Row, Box, DataTable, Col, Button,\n} from 'adminlte-2-react';\n\nclass Users extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [{\n        id: null,\n        name: '',\n        fbid: null,\n        email:'',\n        phone: null\n      }]\n    }\n  }\n\n  componentDidMount() {\n    const isLN = localStorage.getItem('LoggedIn')\n    console.log('is logged in', isLN);\n    let token = null;\n    if(isLN){\n      token = localStorage.getItem('token');\n      console.log(token);\n    }\n    fetch('https://mutualfundcalculator.in/nodejsApp/users',{\n        method: 'post',\n        headers: {'Content-type': 'application/json',\n                  'Authorization': 'Bearer ' + token}\n      //   body: JSON.stringify({\n      //     token: token\n      // })\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(res =>{\n      console.log(res);\n      this.loadUser(res);\n    });\n  }\n\n  loadUser = (res) =>{\n    this.setState({ users: res })\n    console.log('user array loaded',this.state.users)\n  }\n\n  render() {\n    \n    const responsiveColumns = [{ title: 'User ID', data: 'id' },\n      { title: 'fbid', data: 'fbid' },\n      { title: 'User Name', data: 'name' },\n      { title: 'Email', data: 'email' },\n      { title: 'Phone', data: 'phone' }];\n    const responsiveData = this.state.users;\n    console.log(responsiveData);\n\n    return (\n      <Content title=\"User Info\" homeRoute=\"/mfp-frontend/dashboard\">\n        <Row>\n          <Col xs={12}>\n            <Box width=\"130px\" >\n              <DataTable\n                columns={responsiveColumns.concat([{\n                  title: 'Actions',\n                  data: null,\n                  render: () => <Button text=\"Action\" className=\"on-click-event\" />,\n                }])}\n                data={responsiveData}\n                options={{\n\n                }}\n                onClickEvents={{\n                  onClickEvent: (data, rowIdx, rowData) => {\n                    debugger;\n                  },\n                }}\n              />\n            </Box>\n          </Col>\n        </Row>\n      </Content>\n    );\n  }\n}\n\nexport default Users;","import React from 'react';\nimport {\n  Box, DataTable, Col, Button,\n} from 'adminlte-2-react';\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst MessageTable = ({user_id=null, client_id=null}) =>{ \n\n  console.log(\"client id\", client_id);\n  const [msgs, setMsgs] = useState([]);\n\n  useEffect(() =>{\n    let mounted=true;\n    const isLN = localStorage.getItem('LoggedIn')\n    let token = null;\n    if(isLN){\n      token = localStorage.getItem('token');\n      console.log(token);\n    }\n      fetch('https://mutualfundcalculator.in/nodejsApp/messages',{\n          method: 'post',\n          headers: {'Content-type': 'application/json',\n                    'Authorization': 'Bearer ' + token},\n          body: JSON.stringify({\n            Uid: user_id\n        })\n      })\n      .then(response => {\n        return response.json();\n      })\n      .then(res =>{\n        if(mounted){\n          setMsgs(res);\n          console.log(res);\n        }\n      })\n    return () => mounted = false;\n  },[user_id]);\n\n      const responsiveColumns = [{ title: 'Message', data: 'message' },\n        { title: 'Timestamp', data: 'sent_at' }];\n        const responsiveData = msgs;\n      \n      return (\n        <Col xs={12}>\n            <Box width=\"130px\" >\n            <DataTable\n                columns={responsiveColumns.concat([{\n                  title: 'Actions',\n                  data: null,\n                  render: () => <Button text=\"Action\" className=\"on-click-event\" />,\n                }])}\n                data={responsiveData}\n                options={{\n\n                }}\n                onClickEvents={{\n                  onClickEvent: (data, rowIdx, rowData) => {\n                    debugger;\n                  },\n                }}\n              />\n            </Box>\n          </Col>\n      )\n}\n\nexport default MessageTable;\n  ","import React, { Component } from 'react';\nimport { Content, Row, Col, Box } from 'adminlte-2-react';\n\nimport MessageTable from './MessageTable.component';\n\nclass Messages extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      users: [{\n        id: null,\n        name: ''\n      }]\n      // messages: [{\n      //   user_id: null,\n      //   content: [{\n      //     message: '',\n      //     sent_at: ''\n      //   }]\n      // }]\n    }\n  }\n\n  componentDidMount() {\n    const isLN = localStorage.getItem('LoggedIn')\n    let token = null;\n    if(isLN){\n      token = localStorage.getItem('token');\n      console.log(token);\n    }\n    fetch('https://mutualfundcalculator.in/nodejsApp/users',{\n        method: 'post',\n        headers: {'Content-type': 'application/json',\n                  'Authorization':'Bearer ' + token }\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(res =>{\n      console.log(res);\n      this.loadUser(res);\n    });\n  }\n\n  loadUser = (res) =>{\n    let x = {};\n    let data = [];\n    res.forEach(r => {\n      x = {\n        id: r.fbid,\n        name: r.name \n      }\n      data.push(x);\n    });\n    this.setState({ users: data })\n    console.log(\"user in loaduser\",this.state.users);\n    console.log(this.state.users[1].name);\n  }\n\n  render() {\n    if(this.state.users[1]) {\n      let {name} = this.state.users[1];\n      console.log(\"user in render\",name);\n    }\n    return (\n      <Content title=\"Messages\" homeRoute=\"/mfp-frontend/dashboard\" browserTitle=\"\">\n        <Row>\n          <Col xs={12}>\n            {\n              this.state.users===undefined  ? \n              console.log(this.state.users):\n                  this.state.users.map ( ({id, name}, index) =>{\n                    return(\n                      <Box key={id} title={name} type=\"primary\" collapsable={true} collapsed={true} > \n                        {console.log(\"user\",id)}\n                        <MessageTable user_id = {id} client_id = {this.props.clientID} len={this.state.users.length} />\n                      </Box>\n                    ) \n                  }) \n            }\n          </Col>\n        </Row>\n      </Content>\n    );\n  }\n}\n\nexport default Messages;","import React, { Component } from 'react';\n\nimport {\n  Content, Row, Box, DataTable, Col, Label, Button,\n} from 'adminlte-2-react';\n\nclass Services extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      services: [{\n        id: null,\n        details: '',\n        user: '',\n        req_date: '',\n        status: {\n          type: '',\n          text: ''\n        },\n        res_date: ''\n      }]\n    }\n  }\n\n  componentDidMount() {\n    const isLN = localStorage.getItem('LoggedIn')\n    console.log('is logged in', isLN);\n    let token = null;\n    if(isLN){\n      token = localStorage.getItem('token');\n      console.log(token);\n    }\n    fetch('https://mutualfundcalculator.in/nodejsApp/services',{\n      method: 'post',\n      headers: {'Content-type': 'application/json',\n                'Authorization': 'Bearer ' + token}\n    })\n      .then(response => {\n        return response.json();\n      }) \n      .then(res =>{\n        console.log(res);\n        this.loadServices(res);\n      });\n  }\n\n  loadServices = (res) =>{\n    let Type, Text, Res_date;\n    let x = {};\n    console.log(\"type of i\",typeof(i))\n    let data = [];\n    res.forEach((r) =>{\n      console.log(r);\n      if(r.is_resolved===1){\n        Type = 'success';\n        Text = 'resolved';\n        Res_date = r.resolved_at;\n      } else {\n        Type = 'warning';\n        Text = 'not resolved';\n        Res_date = null;\n      }\n      x = {\n        id: r.id,\n        details: r.details,\n        user: r.name,\n        req_date: r.time_received,\n        status: {\n          type: Type,\n          text: Text\n        },\n        res_date: Res_date\n      }\n      data.push(x);\n    })\n    this.setState({services: data});\n  }\n\n  render() {\n    \n    const responsiveColumns = [{ title: 'Service ID', data: 'id' },\n      { title: 'Service Details', data: 'details' },\n      { title: 'User', data: 'user' },\n      { title: 'Request Date', data: 'req_date' },\n      { title: 'Status', data: 'status', render: data2 => <Label type={data2.type}>{data2.text}</Label> },\n      { title: 'Resolved At', data: 'res_date' }];\n    const responsiveData = this.state.services;\n\n    return (\n      <Content title=\"Service Request Info\" homeRoute=\"/mfp-frontend/dashboard\">\n        <Row>\n          <Col xs={12}>\n            <Box width=\"130px\" >\n            <DataTable\n                columns={responsiveColumns.concat([{\n                  title: 'Actions',\n                  data: null,\n                  render: () => <Button text=\"Action\" className=\"on-click-event\" />,\n                }])}\n                data={responsiveData}\n                options={{\n\n                }}\n                onClickEvents={{\n                  onClickEvent: (data, rowIdx, rowData) => {\n                    debugger;\n                  },\n                }}\n              />\n            </Box>\n          </Col>\n        </Row>\n      </Content>\n    );\n  }\n}\n\nexport default Services;","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// import { monoBlue } from 'react-syntax-highlighter/dist/styles/prism';\n\nimport { Content } from 'adminlte-2-react';\n\n\nconst InfoModal = ({ show, onHide, text }) => (\n  <Content title=\"JSX\" modal show={show} onHide={onHide} modalSize=\"lg\">\n    {/* <SyntaxHighlighter language=\"jsx\" style={monoBlue}>{text}</SyntaxHighlighter> */}\n  </Content>\n);\n\nInfoModal.propTypes = {\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  text: PropTypes.string,\n};\n\nInfoModal.defaultProps = {\n  text: null,\n};\n\nexport default InfoModal;","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst salesChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'Digital Goods',\n      backgroundColor: 'rgba(60,141,188,0.9)',\n      strokeColor: 'rgba(60,141,188,0.8)',\n      pointColor: '#3b8bba',\n      pointStrokeColor: 'rgba(60,141,188,1)',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(60,141,188,1)',\n      data: [28, 48, 40, 19, 86, 27, 90],\n    },\n    {\n      label: 'Electronics',\n      backgroundColor: 'rgb(210, 214, 222)',\n      strokeColor: 'rgb(210, 214, 222)',\n      pointColor: 'rgb(210, 214, 222)',\n      pointStrokeColor: '#c1c7d1',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgb(220,220,220)',\n      data: [65, 59, 80, 81, 56, 55, 40],\n    },\n  ],\n};\n\nconst salesChartOptions = {\n  // Boolean - If we should show the scale at all\n  showScale: true,\n  // Boolean - Whether grid lines are shown across the chart\n  scaleShowGridLines: false,\n  // String - Colour of the grid lines\n  scaleGridLineColor: 'rgba(0,0,0,.05)',\n  // Number - Width of the grid lines\n  scaleGridLineWidth: 1,\n  // Boolean - Whether to show horizontal lines (except X axis)\n  scaleShowHorizontalLines: true,\n  // Boolean - Whether to show vertical lines (except Y axis)\n  scaleShowVerticalLines: true,\n  // Number - Tension of the bezier curve between points\n  lineTension: 0.3,\n  // Number - Radius of each point dot in pixels\n  pointRadius: 0,\n  // Boolean - Whether to show a stroke for datasets\n  datasetStroke: true,\n  // Number - Pixel width of dataset stroke\n  datasetStrokeWidth: 2,\n  // Boolean - Whether to fill the dataset with a color\n  datasetFill: true,\n  legend: {\n    display: false,\n  },\n  // String - A leg,end template\n  // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n  maintainAspectRatio: false,\n  // Boolean - whether to make the chart responsive to window resizing\n  responsive: true,\n};\n\nclass MonthlyRecapChart extends Component {\n  state = { }\n\n  render() {\n    return (\n      <Line ref={(c) => { this.chartRef = c; }} data={salesChartData} options={salesChartOptions} height={180} />\n    );\n  }\n}\n\nexport default MonthlyRecapChart;","import React from 'react';\nimport { Col, Infobox } from 'adminlte-2-react';\n\nconst Data = [{\n  icon: 'ion-ios-people-outline',\n  color: 'aqua',\n  number: '',\n  text: 'CUMULATIVE USERS',\n},\n{\n  icon: 'fab-google-plus-g',\n  color: 'red',\n  number: '',\n  text: 'UNIQUE USERS TODAY',\n},\n{\n  icon: 'ion-ios-cart-outline',\n  color: 'green',\n  number: '',\n  text: 'TOTAL USERS TODAY',\n},\n{\n  icon: 'ion-ios-people-outline',\n  color: 'yellow',\n  number: '',\n  text: 'CUMULATIVE MESSAGES',\n}];\n\nclass UpperInfoBoxes extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data: Data\n    }\n  }\n\n  componentDidMount(){\n    const isLN = localStorage.getItem('LoggedIn')\n    console.log('is logged in', isLN);\n    let token = null;\n    if(isLN){\n      token = localStorage.getItem('token');\n      console.log(token);\n    }\n    fetch('https://mutualfundcalculator.in/nodejsApp/infoBox',{\n        method: 'post',\n        headers: {'Content-type': 'application/json',\n                  'Authorization': 'Bearer ' + token}\n    })\n    .then(response => {\n      return response.json();\n    })\n    .then(res =>{\n      this.loadInfoBoxData(res);\n    });\n  }\n\n  loadInfoBoxData = (res) => {\n    this.setState({\n      data: [\n        {\n          icon: 'ion-ios-people-outline',\n          color: 'aqua',\n          number: res.usrCnt,\n          text: 'CUMULATIVE USERS',\n        },\n        {\n          icon: 'fab-google-plus-g',\n          color: 'red',\n          number: res.unqUsrCnt,\n          text: 'UNIQUE USERS TODAY',\n        },\n        {\n          icon: 'ion-ios-cart-outline',\n          color: 'green',\n          number: res.usrTodayCnt,\n          text: 'TOTAL USERS TODAY',\n        },\n        {\n          icon: 'ion-ios-people-outline',\n          color: 'yellow',\n          number: res.msgCnt,\n          text: 'CUMULATIVE MESSAGES',\n        }\n      ]\n    })\n  }\n\n  render() {\n    return(\n      this.state.data.map((props, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Col key={`upperInfoBox${index}`} xs={12} sm={6} md={3}>\n          <Infobox {...props} />\n        </Col>\n      ))\n    );\n  }\n}\n\nexport default UpperInfoBoxes;","import React from 'react';\nimport {\n  Box, Col, Row, BoxPane, SparklineBox,\n} from 'adminlte-2-react';\n\nconst VisitorsReport = () => (\n  <Box type=\"success\" collapsable closable noPadding title=\"Visitors Report\">\n    <Row>\n      <Col md={9} sm={8}>\n        <div className=\"pad\">\n          <div style={{ height: '325px' }} />\n        </div>\n      </Col>\n      <Col md={3} sm={4}>\n        <BoxPane padding color=\"green\">\n          <SparklineBox text=\"Visits\" header=\"8390\" chartData={[90, 70, 90, 70, 75, 80, 70]} />\n          <SparklineBox text=\"Referrals\" header=\"30%\" chartData={[90, 50, 90, 70, 61, 83, 63]} />\n          <SparklineBox text=\"Organic\" header=\"70%\" chartData={[90, 50, 90, 70, 61, 83, 63]} />\n        </BoxPane>\n      </Col>\n    </Row>\n  </Box>\n);\n\nexport default VisitorsReport;","import React, { Component } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport uuidv4 from 'uuid';\n\nimport {\n  Box, Row, Col, NavList, NavListItem,\n} from 'adminlte-2-react';\n\nclass BrowserUsage extends Component {\n  state = {}\n\n  browserUsageData = {\n    labels: ['Chrome', 'IE', 'FireFox', 'Safari', 'Opera', 'Navigator'],\n    datasets: [{\n      data: [700, 500, 400, 600, 300, 100],\n      backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],\n    }],\n  };\n\n  browserUsageOptions = {\n    segmentShowStroke: true,\n    segmentStrokeColor: '#fff',\n    segmentStrokeWidth: 1,\n    cutoutPercentage: 50, // This is 0 for Pie charts\n    animationSteps: 100,\n    animationEasing: 'easeOutBounce',\n    animateRotate: true,\n    animateScale: false,\n    responsive: true,\n    maintainAspectRatio: false,\n    legend:\n    {\n      display: false,\n    },\n    legendCallback: (chart) => {\n      const mapColor = (color) => {\n        switch (color) {\n          case '#f56954':\n            return 'red';\n          case '#00a65a':\n            return 'green';\n          case '#f39c12':\n            return 'yellow';\n          case '#00c0ef':\n            return 'aqua';\n          case '#3c8dbc':\n            return 'light-blue';\n          case '#d2d6de':\n            return 'gray';\n          default:\n            return 'red';\n        }\n      };\n      const { backgroundColor } = chart.data.datasets[0];\n\n      return (\n        <ul className=\"chart-legend clearfix\">\n          {chart.data.labels.map((p, i) => (\n            <li key={uuidv4()}>\n              <i className={`fa fa-circle-o text-${mapColor(backgroundColor[i])}`} />\n              {' '}\n              {p}\n            </li>\n          ))}\n        </ul>\n      );\n    },\n    tooltips: {\n      displayColors: false,\n      callbacks: {\n        label(tooltipItem, data) {\n          const { datasets, labels } = data;\n          const { index } = tooltipItem;\n          return `${datasets[0].data[index]} ${labels[index]} users`;\n        },\n      },\n    },\n  };\n\n  browserUsageFooter = (\n    <NavList pills stacked>\n      <NavListItem iconClass=\"fa-angle-down\" color=\"red\" iconLabel=\"12%\" text=\"United States of America\" onClick={() => { }} />\n      <NavListItem iconClass=\"fa-angle-up\" color=\"green\" iconLabel=\"4%\" text=\"India\" onClick={() => { }} />\n      <NavListItem iconClass=\"fa-angle-left\" color=\"yellow\" iconLabel=\"0%\" text=\"China\" onClick={() => { }} />\n    </NavList>\n  );\n\n  componentDidMount() {\n    const browserUsageChartLegend = this.browserUsageChart.chartInstance.generateLegend();\n    this.setState({ browserUsageChartLegend });\n  }\n\n  render() {\n    const { browserUsageChartLegend } = this.state;\n    return (\n      <Box key=\"browserUsage\" collapsable closable title=\"Browser Usage\" footer={this.browserUsageFooter} footerClass=\"no-padding\">\n        <Row>\n          <Col md={8}>\n            <Pie\n              key=\"browserUsageChart\"\n              ref={(c) => { this.browserUsageChart = c; }}\n              data={this.browserUsageData}\n              options={this.browserUsageOptions}\n              height={150}\n            />\n          </Col>\n          <Col md={4}>\n            {browserUsageChartLegend}\n          </Col>\n        </Row>\n      </Box>\n\n    );\n  }\n}\n\nexport default BrowserUsage;","import React from 'react';\nimport {\n  Box, SimpleTable, Button, Sparkbar,\n} from 'adminlte-2-react';\n\nconst latestOrdersColumns = [\n  {\n    title: 'Order ID',\n    data: 'id',\n    render: data => <a href=\"pages/examples/invoice.html\">{data}</a>,\n  },\n  {\n    title: 'Item',\n    data: 'item',\n  },\n  {\n    title: 'Status',\n    data: 'status',\n    render: (data, rowData) => <span className={`label label-${rowData.type}`}>{data}</span>,\n  },\n  {\n    title: 'Popularity',\n    data: 'popularity',\n    render: (data, rowData) => <Sparkbar color={rowData.color} height=\"20\" data={data} />,\n  },\n];\n\nconst latestOrdersData = [\n  {\n    id: 'OR9842',\n    item: 'Call of Duty IV',\n    status: 'Shipped',\n    popularity: [90, 80, 90, -70, 61, -83, 63],\n    color: '#00a65a',\n    type: 'success',\n  },\n  {\n    id: 'OR1848',\n    item: 'Samsung Smart TV',\n    status: 'Pending',\n    popularity: [90, 80, -90, 70, 61, -83, 68],\n    color: '#f39c12',\n    type: 'warning',\n  },\n  {\n    id: 'OR7429',\n    item: 'iPhone 6 Plus',\n    status: 'Delivered',\n    popularity: [90, -80, 90, 70, -61, 83, 63],\n    color: '#f56954',\n    type: 'danger',\n  },\n  {\n    id: 'OR7429',\n    item: 'Samsung Smart TV',\n    status: 'Processing',\n    popularity: [90, 80, -90, 70, -61, 83, 63],\n    color: '#00c0ef',\n    type: 'info',\n  },\n  {\n    id: 'OR1848',\n    item: 'Samsung Smart TV',\n    status: 'Pending',\n    popularity: [90, 80, -90, 70, 61, -83, 68],\n    color: '#f39c12',\n    type: 'warning',\n  },\n  {\n    id: 'OR7429',\n    item: 'iPhone 6 Plus',\n    status: 'Delivered',\n    popularity: [90, -80, 90, 70, -61, 83, 63],\n    color: '#f56954',\n    type: 'danger',\n  },\n  {\n    id: 'OR9842',\n    item: 'Call of Duty IV',\n    status: 'Shipped',\n    popularity: [90, 80, 90, -70, 61, -83, 63],\n    color: '#00a65a',\n    type: 'success',\n  },\n];\n\nconst LatestOrders = () => (\n  <Box\n    type=\"info\"\n    title=\"Latest Orders\"\n    collapsable\n    closable\n    footer={[<Button key=\"place-new-order\" size=\"sm\" text=\"Place New Order\" flat pullLeft type=\"info\" />, <Button key=\"view-all-orders\" size=\"sm\" text=\"View All Orders\" flat pullRight />]}\n  >\n    <SimpleTable columns={latestOrdersColumns} data={latestOrdersData} />\n  </Box>\n);\n\nexport default LatestOrders;","import React, { Component } from 'react';\n\nimport {\n  Content, Col, Row, Box, Chatbox, Memberbox,\n  ProductList, ProductListItem, Infobox, DescriptionBlock, ProgressGroup\n} from 'adminlte-2-react';\nimport InfoModal from './InfoModal';\nimport {\n\tinfobox5, infobox6, infobox7, infobox8, latestOrders, progressGroup1,\n  progressGroup2, progressGroup3, progressGroup4, descriptionBlock1,\n  descriptionBlock2, descriptionBlock3, descriptionBlock4,\n} from './Dashboard.Info';\nimport MonthlyRecapChart from './dashboard-components/MonthlyRecapChart';\n// import monthlyRecapString from '!raw-loader!./dashboard-components/MonthlyRecapChart';\n\nimport UpperInfoBoxes from './dashboard-components/UpperInfoBoxes';\n// import upperInfoBoxesString from '!raw-loader!./dashboard-components/UpperInfoBoxes';\n\nimport VisitorsReport from './dashboard-components/VisitorsReport';\n// import visitorsReportString from '!raw-loader!./dashboard-components/VisitorsReport';\n\nimport BrowserUsage from './dashboard-components/BrowserUsage';\n// import browserUsageString from '!raw-loader!./dashboard-components/BrowserUsage';\nimport LatestOrders from './dashboard-components/LatestOrders';\n\n// import defaultImg from '../../assets/img/default-50x50.gif';\n\nclass Dashboard extends Component {\n\tstate = {\n\t\tshowInfoModal: false,\n\t\tinfoModalText: null,\n\t}\n    \n\tconstructor() {\n\t\tsuper();\n\t\tthis.onHide = this.onHide.bind(this);\n\t\tthis.showInfoModal = this.showInfoModal.bind(this);\n\t}\n\n\tonHide() {\n    this.setState({ showInfoModal: false, infoModalText: null });\n  }\n\n  showInfoModal(text) {\n    this.setState({ showInfoModal: true, infoModalText: text });\n  }\n\n\trender(){\n\t\tconst { showInfoModal, infoModalText } = this.state;\n\t\treturn(\n\t\t\t<Content title=\"Dashboard\" subTitle=\"Version 2.0\" homeRoute=\"/mfp-frontend/dashboard\">\n\t\t\t\t<InfoModal show={showInfoModal} onHide={this.onHide} text={infoModalText} />\n\t\t\t\t<Row >\n          <UpperInfoBoxes />\n        </Row>\n\t\t\t\t<Row>\n          <Col md={12}>\n            { /* TODO: fix options */}\n            <Box\n              title=\"Monthly Recap Report\"\n              collapsable\n              closable\n              options={<ul />}\n              footer={(\n                <Row>\n                  <Col sm={3} xs={6} onClick={() => this.showInfoModal(descriptionBlock1)}>\n                    <DescriptionBlock\n                      percentage={17}\n                      percentageColor=\"green\"\n                      header=\"$35,210.43\"\n                      text=\"TOTAL REVENUE\"\n                      indication=\"up\"\n                    />\n                  </Col>\n                  <Col sm={3} xs={6} onClick={() => this.showInfoModal(descriptionBlock2)}>\n                    <DescriptionBlock\n                      percentage={0}\n                      percentageColor=\"yellow\"\n                      header=\"$10,390.90\"\n                      text=\"TOTAL COST\"\n                      indication=\"left\"\n                    />\n                  </Col>\n                  <Col sm={3} xs={6} onClick={() => this.showInfoModal(descriptionBlock3)}>\n                    <DescriptionBlock\n                      percentage={20}\n                      percentageColor=\"green\"\n                      header=\"$24,813.53\"\n                      text=\"TOTAL PROFIT\"\n                      indication=\"up\"\n                    />\n                  </Col>\n                  <Col sm={3} xs={6} onClick={() => this.showInfoModal(descriptionBlock4)}>\n                    <DescriptionBlock\n                      percentage={18}\n                      percentageColor=\"red\"\n                      header=\"1200\"\n                      text=\"GOAL COMPLETIONS\"\n                      indication=\"down\"\n                    />\n                  </Col>\n                </Row>\n              )}\n            >\n              <Row>\n                <Col md={8} >\n                  <p className=\"text-center\">\n                    <strong>Sales: 1 Jan, 2014 - 30 Jul, 2014</strong>\n                  </p>\n                  <div className=\"chart\" style={{ height: '180px' }}>\n                    <MonthlyRecapChart />\n                  </div>\n                </Col>\n                <Col md={4}>\n                  <p className=\"text-center\">\n                    <strong>Goal Completion</strong>\n                  </p>\n                  <div onClick={() => this.showInfoModal(progressGroup1)}>\n                    <ProgressGroup\n                      text=\"Add Products to Cart\"\n                      maxValue={200}\n                      currentValue={160}\n                      color=\"aqua\"\n                    />\n                  </div>\n                  <div onClick={() => this.showInfoModal(progressGroup2)}>\n                    <ProgressGroup\n                      text=\"Complete Purchase\"\n                      maxValue={400}\n                      currentValue={310}\n                      color=\"red\"\n                    />\n                  </div>\n                  <div onClick={() => this.showInfoModal(progressGroup3)}>\n                    <ProgressGroup\n                      text=\"Visit Premium Page\"\n                      maxValue={800}\n                      currentValue={480}\n                      color=\"green\"\n                    />\n                  </div>\n                  <div onClick={() => this.showInfoModal(progressGroup4)}>\n                    <ProgressGroup\n                      text=\"Send Inquiries\"\n                      maxValue={500}\n                      currentValue={250}\n                      color=\"yellow\"\n                    />\n                  </div>\n                </Col>\n              </Row>\n            </Box>\n          </Col>\n        </Row>\n\t\t\t\t<Row>\n          <Col md={8}>\n            <div >\n              <VisitorsReport />\n            </div>\n            <Row>\n              <Col md={6}>\n                <Chatbox\n                  type=\"warning\"\n                  title=\"Direct Chat\"\n                  collapsable\n                  closable\n                />\n              </Col>\n              <Col md={6}>\n                <Memberbox\n                  type=\"danger\"\n                  title=\"Latest Members\"\n                  collapsable\n                  closable\n                />\n              </Col>\n            </Row>\n            <div onClick={() => this.showInfoModal(latestOrders)}>\n              <LatestOrders />\n            </div>\n          </Col>\n          <Col md={4}>\n            <div onClick={() => this.showInfoModal(infobox5)}>\n              <Infobox\n                iconColorOnly={false}\n                icon=\"ion-ios-pricetag-outline\"\n                color=\"yellow\"\n                text=\"Inventory\"\n                number=\"5,200\"\n                progress={50}\n                progressText=\"50% Increase in 30 Days\"\n              />\n            </div>\n            <div onClick={() => this.showInfoModal(infobox6)}>\n              <Infobox\n                iconColorOnly={false}\n                icon=\"ion-ios-heart-outline\"\n                color=\"green\"\n                text=\"Mentions\"\n                number=\"92,050\"\n                progress={20}\n                progressText=\"20% Increase in 30 Days\"\n              />\n            </div>\n            <div onClick={() => this.showInfoModal(infobox7)}>\n              <Infobox\n                iconColorOnly={false}\n                icon=\"ion-ios-cloud-download-outline\"\n                color=\"red\"\n                text=\"Downloads\"\n                number=\"114,381\"\n                progress={70}\n                progressText=\"70% Increase in 30 Days\"\n              />\n            </div>\n            <div onClick={() => this.showInfoModal(infobox8)}>\n              <Infobox\n                iconColorOnly={false}\n                icon=\"ion-ios-chatbubble-outline\"\n                color=\"aqua\"\n                text=\"Direct Messages\"\n                number=\"163,921\"\n                progress={40}\n                progressText=\"40% Increase in 30 Days\"\n              />\n            </div>\n            <div >\n              <BrowserUsage />\n            </div>\n            <Box type=\"primary\" title=\"Recently Added Products\" closable collapsable footer={<a href=\"/\" className=\"uppercase\">View All Products</a>} footerClass=\"text-center\">\n              <ProductList inBox>\n                <ProductListItem title=\"Samsung TV\" label=\"$1800\" labelType=\"warning\" description={'Samsung 32\" 1080p 60Hz LED Smart HDTV.'} />\n                <ProductListItem title=\"Bicycle\" label=\"$700\" labelType=\"info\" description={'26\" Mongoose Dolomite Men\\'s 7-speed, Navy Blue.'} />\n                <ProductListItem title=\"Xbox One\" label=\"$350\" labelType=\"danger\" description=\"Xbox One Console Bundle with Halo Master Chief Collection.\" />\n                <ProductListItem title=\"PlayStation 4\" label=\"$399\" labelType=\"success\" description=\"PlayStation 4 500GB Console (PS4)\" />\n              </ProductList>\n            </Box>\n          </Col>\n        </Row>\n\t\t\t</Content>\n\t\t);\n\t}\n}\n\nexport default Dashboard;","const infobox1 = `<Infobox\nicon=\"ion-ios-gear-outline\"\ncolor=\"aqua\"\nnumber={[90, <small key=\"temp\">%</small>]}\ntext=\"CPU TRAFFIC\"\n/>\n</Col>`;\nconst infobox2 = `<Infobox\nicon=\"fab-google-plus-g\"\ncolor=\"red\"\nnumber=\"41,410\"\ntext=\"Likes\"\n/>`;\nconst infobox3 = `<Infobox\nicon=\"ion-ios-cart-outline\"\ncolor=\"green\"\nnumber=\"Sales\"\ntext=\"760\"\n/>`;\nconst infobox4 = `<Infobox\nicon=\"ion-ios-people-outline\"\ncolor=\"yellow\"\nnumber=\"2,000\"\ntext=\"New Members\"\n/>`;\n\nconst alert = '<Alert closable type=\"info\" title=\"Inspection Info\" icon=\"fa-info\">Most components will show their jsx code when you click on them! - Try me</Alert>';\n\nconst visitorsReport = `<Box type=\"success\" collapsable closable noPadding title=\"Visitors Report\">\n<Row>\n  <Col md={9} sm={8}>\n    <div className=\"pad\">\n      <div style={{ height: '325px' }} />\n    </div>\n  </Col>\n  <Col md={3} sm={4}>\n    <div className=\"pad box-pane-right bg-green\" style={{ minHeight: '280px' }}>\n      <SparklineBox text=\"Visits\" header=\"8390\" chartData={[90, 70, 90, 70, 75, 80, 70]} />\n      <SparklineBox text=\"Referrals\" header=\"30%\" chartData={[90, 50, 90, 70, 61, 83, 63]} />\n      <SparklineBox text=\"Organic\" header=\"70%\" chartData={[90, 50, 90, 70, 61, 83, 63]} />\n    </div>\n  </Col>\n</Row>\n</Box>`;\n\nconst infobox5 = `<Infobox\niconColorOnly={false}\nicon=\"ion-ios-pricetag-outline\"\ncolor=\"yellow\"\ntext=\"Inventory\"\nnumber=\"5,200\"\nprogress={50}\nprogressText=\"50% Increase in 30 Days\"\n/>`;\nconst infobox6 = `<Infobox\niconColorOnly={false}\nicon=\"ion-ios-heart-outline\"\ncolor=\"green\"\ntext=\"Mentions\"\nnumber=\"92,050\"\nprogress={20}\nprogressText=\"20% Increase in 30 Days\"\n/>`;\nconst infobox7 = `<Infobox\niconColorOnly={false}\nicon=\"ion-ios-cloud-download-outline\"\ncolor=\"red\"\ntext=\"Downloads\"\nnumber=\"114,381\"\nprogress={70}\nprogressText=\"70% Increase in 30 Days\"\n/>`;\nconst infobox8 = `<Infobox\niconColorOnly={false}\nicon=\"ion-ios-chatbubble-outline\"\ncolor=\"aqua\"\ntext=\"Direct Messages\"\nnumber=\"163,921\"\nprogress={40}\nprogressText=\"40% Increase in 30 Days\"\n/>`;\n\nconst latestOrders = `<Box\ntype=\"info\"\ntitle=\"Latest Orders\"\ncollapsable\nclosable\nfooter={[<Button key=\"place-new-order\" size=\"sm\" text=\"Place New Order\" flat pullLeft type=\"info\" />, <Button key=\"view-all-orders\" size=\"sm\" text=\"View All Orders\" flat pullRight />]}\n>\n<SimpleTable columns={this.latestOrdersColumns} data={this.latestOrdersData} />\n</Box>\nlatestOrdersColumns = [\n  {\n    title: 'Order ID',\n    data: 'id',\n    render: data => <a href=\"pages/examples/invoice.html\">{data}</a>,\n  },\n  {\n    title: 'Item',\n    data: 'item',\n  },\n  {\n    title: 'Status',\n    data: 'status',\n    render: (data, rowData) => <span className={\\`label label-\\${rowData.type}\\`}>{data}</span>,\n  },\n  {\n    title: 'Popularity',\n    data: 'popularity',\n    render: (data, rowData) => <Sparkbar color={rowData.color} height=\"20\" data={data} />,\n  },\n];\nlatestOrdersData = [\n  {\n    id: 'OR9842',\n    item: 'Call of Duty IV',\n    status: 'Shipped',\n    popularity: [90, 80, 90, -70, 61, -83, 63],\n    color: '#00a65a',\n    type: 'success',\n  },\n  {\n    id: 'OR1848',\n    item: 'Samsung Smart TV',\n    status: 'Pending',\n    popularity: [90, 80, -90, 70, 61, -83, 68],\n    color: '#f39c12',\n    type: 'warning',\n  },\n  {\n    id: 'OR7429',\n    item: 'iPhone 6 Plus',\n    status: 'Delivered',\n    popularity: [90, -80, 90, 70, -61, 83, 63],\n    color: '#f56954',\n    type: 'danger',\n  },\n  {\n    id: 'OR7429',\n    item: 'Samsung Smart TV',\n    status: 'Processing',\n    popularity: [90, 80, -90, 70, -61, 83, 63],\n    color: '#00c0ef',\n    type: 'info',\n  },\n  {\n    id: 'OR1848',\n    item: 'Samsung Smart TV',\n    status: 'Pending',\n    popularity: [90, 80, -90, 70, 61, -83, 68],\n    color: '#f39c12',\n    type: 'warning',\n  },\n  {\n    id: 'OR7429',\n    item: 'iPhone 6 Plus',\n    status: 'Delivered',\n    popularity: [90, -80, 90, 70, -61, 83, 63],\n    color: '#f56954',\n    type: 'danger',\n  },\n  {\n    id: 'OR9842',\n    item: 'Call of Duty IV',\n    status: 'Shipped',\n    popularity: [90, 80, 90, -70, 61, -83, 63],\n    color: '#00a65a',\n    type: 'success',\n  },\n];`;\n\nconst progressGroup1 = `<ProgressGroup\ntext=\"Add Products to Cart\"\nmaxValue={200}\ncurrentValue={160}\ncolor=\"aqua\"\n/>`;\nconst progressGroup2 = `<ProgressGroup\ntext=\"Complete Purchase\"\nmaxValue={400}\ncurrentValue={310}\ncolor=\"red\"\n/>`;\nconst progressGroup3 = `<ProgressGroup\ntext=\"Visit Premium Page\"\nmaxValue={800}\ncurrentValue={480}\ncolor=\"green\"\n/>`;\nconst progressGroup4 = `<ProgressGroup\ntext=\"Send Inquiries\"\nmaxValue={500}\ncurrentValue={250}\ncolor=\"yellow\"\n/>`;\n\nconst descriptionBlock1 = `<DescriptionBlock\npercentage={17}\npercentageColor=\"green\"\nheader=\"$35,210.43\"\ntext=\"TOTAL REVENUE\"\nindication=\"up\"\n/>`;\nconst descriptionBlock2 = `<DescriptionBlock\npercentage={0}\npercentageColor=\"yellow\"\nheader=\"$10,390.90\"\ntext=\"TOTAL COST\"\nindication=\"left\"\n/>`;\nconst descriptionBlock3 = `<DescriptionBlock\npercentage={20}\npercentageColor=\"green\"\nheader=\"$24,813.53\"\ntext=\"TOTAL PROFIT\"\nindication=\"up\"\n/>`;\nconst descriptionBlock4 = `<DescriptionBlock\npercentage={18}\npercentageColor=\"red\"\nheader=\"1200\"\ntext=\"GOAL COMPLETIONS\"\nindication=\"down\"\n/>`;\n\nconst browserUsage = `\nbrowserUsageFooter = (\n  <NavList pills stacked>\n    <NavListItem iconClass=\"fa-angle-down\" color=\"red\" iconLabel=\"12%\" text=\"United States of America\" onClick={() => { }} />\n    <NavListItem iconClass=\"fa-angle-up\" color=\"green\" iconLabel=\"4%\" text=\"India\" onClick={() => { }} />\n    <NavListItem iconClass=\"fa-angle-left\" color=\"yellow\" iconLabel=\"0%\" text=\"China\" onClick={() => { }} />\n  </NavList>\n);\n<Box key=\"browserUsage\" collapsable closable title=\"Browser Usage\" footer={this.browserUsageFooter} footerClass=\"no-padding\">\n  <Row>\n    <Col md={8}>\n      <Pie\n        key=\"browserUsageChart\"\n        ref={(c) => { this.browserUsageChart = c; }}\n        data={this.browserUsageData}\n        options={this.browserUsageOptions}\n        height={150}\n      />\n    </Col>\n    <Col md={4}>\n      {browserUsageChartLegend}\n    </Col>\n  </Row>\n</Box>\nbrowserUsageData = {\n  labels: ['Chrome', 'IE', 'FireFox', 'Safari', 'Opera', 'Navigator'],\n  datasets: [{\n    data: [700, 500, 400, 600, 300, 100],\n    backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],\n  }],\n};\nbrowserUsageOptions = {\n  // Boolean - Whether we should show a stroke on each segment\n  segmentShowStroke: true,\n  // String - The colour of each segment stroke\n  segmentStrokeColor: '#fff',\n  // Number - The width of each segment stroke\n  segmentStrokeWidth: 1,\n  // Number - The percentage of the chart that we cut out of the middle\n  cutoutPercentage: 50, // This is 0 for Pie charts\n  // Number - Amount of animation steps\n  animationSteps: 100,\n  // String - Animation easing effect\n  animationEasing: 'easeOutBounce',\n  // Boolean - Whether we animate the rotation of the Doughnut\n  animateRotate: true,\n  // Boolean - Whether we animate scaling the Doughnut from the centre\n  animateScale: false,\n  // Boolean - whether to make the chart responsive to window resizing\n  responsive: true,\n  // Boolean - whether to maintain the starting aspect\n  // ratio or not when responsive, if set to false, will take up entire container\n  maintainAspectRatio: false,\n  legend:\n  {\n    display: false,\n  },\n  // String - A legend template\n  legendCallback: (chart) => {\n    const mapColor = (color) => {\n      switch (color) {\n        case '#f56954':\n          return 'red';\n        case '#00a65a':\n          return 'green';\n        case '#f39c12':\n          return 'yellow';\n        case '#00c0ef':\n          return 'aqua';\n        case '#3c8dbc':\n          return 'light-blue';\n        case '#d2d6de':\n          return 'gray';\n        default:\n          return 'red';\n      }\n    };\n    const { backgroundColor } = chart.data.datasets[0];\n    return (\n      <ul className=\"chart-legend clearfix\">\n        {chart.data.labels.map((p, i) => (\n          <li key={uuidv4()}>\n            <i className={\\`fa fa-circle-o text-\\${mapColor(backgroundColor[i])}\\`} />\n            {' '}\n            {p}\n          </li>\n        ))}\n      </ul>\n    );\n  },\n  tooltips: {\n    displayColors: false,\n    callbacks: {\n      label(tooltipItem, data) {\n        const { datasets, labels } = data;\n        const { index } = tooltipItem;\n        return \\`\\${datasets[0].data[index]} \\${labels[index]} users\\`;\n      },\n    },\n  },\n};`;\n\nexport {\n  infobox1, infobox2, infobox3, infobox4, alert, visitorsReport,\n  infobox5, infobox6, infobox7, infobox8, latestOrders, progressGroup1, progressGroup2,\n  progressGroup3, progressGroup4, descriptionBlock1, descriptionBlock2,\n  descriptionBlock3, descriptionBlock4, browserUsage,\n};","import React, {Component} from 'react';\nimport AdminLTE, {Sidebar, Navbar} from 'adminlte-2-react';\nimport Users from '../components/Users.component';\nimport Messages from '../components/Messages.component';\nimport Services from '../components/Services.component';\nimport Dashboard from '../components/Dashboard/dashboard.component'\n\nimport {withRouter} from 'react-router-dom';\n\nconst { Item, Header, UserPanel } = Sidebar;\nconst {Entry} = Navbar;\n\nclass DashboardPage extends Component {\n\n  constructor(props){\n      super(props);\n      this.state = {};\n  }\n\n  componentDidMount() {\n    const isLN = localStorage.getItem('LoggedIn')\n    console.log('is logged in', isLN);\n    let client = null;\n    if(isLN){\n      client = localStorage.getItem('client');\n      console.log('client dash', client);\n      this.props.updateClient(JSON.parse(client));\n    }\n  }\n\n  logout = () =>{\n    localStorage.clear();\n    this.props.history.replace('/mfp-frontend');\n  }\n\n  render() {\n    // console.log(\"in dashboard\", this.props.clientData.id);\n    return (\n      <AdminLTE title={[\"App\", \"Name\"]} titleShort={[\"ap\", \"na\"]} theme=\"blue\" homeTo={\"/mfp-frontend/dashboard\"}>\n        <Navbar.Core>\n          <Entry\n            icon=\"fas-sign-out-alt\" onClick = {this.logout}\n          >\n          </Entry>\n        </Navbar.Core>\n        <Sidebar.Core>\n            <UserPanel username = {this.props.clientData.name} status = \"status\" imageUrl = \"http://getdrawings.com/free-icon/my-profile-icon-67.png\"/>\n            <Header text=\"Options\" icon=\"options-outline\" />\n            <Item key=\"users\" text=\"Users\" to=\"/client-users\" />\n            <Item key=\"messages\" text=\"Messages\" to=\"/client-messages\"  />\n            <Item key=\"services\" text=\"Services\" to=\"/client-services\" />\n        </Sidebar.Core>\n        <Users path=\"/client-users\" clientID = {this.props.clientData.id}/>\n        <Messages path=\"/client-messages\" clientID = {this.props.clientData.id}/>\n        <Services path=\"/client-services\" clientID = {this.props.clientData.id}/>\n        <Dashboard path=\"/mfp-frontend/dashboard\" />\n      </AdminLTE>\n    );\n  }\n}\nexport default withRouter(DashboardPage);\n","import React, {Component} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\n\nimport './login.page.css';\n\nclass Login extends Component {\n    constructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tloginName: '',\n\t\t\tloginPassword: '',\n\t\t\tvalid: true\n\t\t}\n\t}\n\n\tonNameChange = (event) =>{\n\t\tthis.setState({loginName: event.target.value});\n\t}\n\n\tonPasswordChange = (event) =>{\n\t\tthis.setState({loginPassword: event.target.value});\n\t}\n\n\tonSubmitChange = () =>{\n\t\tfetch('https://mutualfundcalculator.in/nodejsApp/login',{\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.loginName,\n\t\t\t\tpassword: this.state.loginPassword\n\t\t\t})\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tif(data.id){\n\t\t\t\t\tthis.props.loadClient(data);\n\t\t\t\t\tthis.props.history.replace('/mfp-frontend/dashboard');\n\t\t\t\t}\n\t\t\t\telse \n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloginName:'',\n\t\t\t\t\t\tloginPassword:'',\n\t\t\t\t\t\tvalid: false});\n\t\t\t\t\tconsole.log(\"login component\", data);\n\t\t\t})\n\t}\n\n\trender(){\n\n\t\treturn(\n\t\t\t<div id = \"loginform\">\n\t\t\t\t{\n\t\t\t\t\t!this.state.valid && <p className='login-error'>Invalid name or password</p> \n\t\t\t\t}\n\t\t\t\t<h2 id=\"headerTitle\">Login</h2>\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"login-row\">\n\t\t\t\t\t\t<label>Username</label>\n\t\t\t\t\t\t<input onChange={this.onNameChange} type=\"text\" placeholder=\"Enter username\"/>\n\t\t\t\t\t</div> \n\t\t\t\t\t<div className=\"login-row\">\n\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t<input onChange={this.onPasswordChange} type=\"password\" placeholder=\"Enter password\"/>\n\t\t\t\t\t</div> \n\t\t\t\t\t<div id=\"login-button\" className=\"login-row\">\n\t\t\t\t\t\t<button onClick={this.onSubmitChange}>Login Now</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"alternativeLogin\">\n\t\t\t\t\t\t<label>Or sign in with:</label>\n\t\t\t\t\t\t<div id=\"iconGroup\">\n\t\t\t\t\t\t\t<Link to=\"/\" id=\"facebookIcon\"></Link>\n\t\t\t\t\t\t\t<Link to=\"/\" id=\"twitterIcon\"></Link>\n\t\t\t\t\t\t\t<Link to=\"/\" id=\"googleIcon\"></Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t);\n\t}\n}\n\nexport default withRouter(Login);","import React, {Component} from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport DashboardPage from './pages/dashboard.page';\nimport Login from './pages/login.page';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      isLoggedIn: false,\n      client: {\n        id: null,\n        name: ''\n      }\n    };\n  }\n\n  loadClient = (res) =>{\n    console.log(\" in app\",res);\n    let client = {\n      id: res.client.id,\n      name: res.client.name\n    }\n    this.updateClient(client);\n    this.updateIsLoggedIn(true);\n    localStorage.setItem('LoggedIn',this.state.isLoggedIn);\n    localStorage.setItem('token',res.token);\n    localStorage.setItem('client', JSON.stringify(this.state.client));\n  }\n\n  updateClient = (value) =>{\n    this.setState({client: value});\n  }\n\n  updateIsLoggedIn = (value) =>{\n    this.setState({isLoggedIn: value});\n  }\n\n  render() {\n    console.log(\"in app\", this.state.client);\n    return (\n      \n         <Switch>\n          <Route exact path = '/mfp-frontend' render={(props) =>\n            <Login {...props}\n              loadClient = {this.loadClient}\n            />\n          } />\n          <Route exact path = '/mfp-frontend/dashboard' render = {(props) =>\n            <DashboardPage {...props}\n              updateClient = {this.updateClient}\n              clientData = {this.state.client}\n              isLoggedIn = {this.state.client}\n              />    \n          } />\n        </Switch>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n    <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}